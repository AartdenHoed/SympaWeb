<div class="controller">
    <div class="sy-component">
    </div>
    @model ConfigMan.ViewModels.ComponentIndex

    <h2>
        @Html.DisplayFor(model => model.Message.Title)
    </h2>
    <p>
        @Html.DisplayFor(model => model.Message.Tekst)
    </p>

    <div class="sy-div">

        @Html.ActionLink("Nieuwe Component", "Create", null, new { @class = "sy-acreate" }) |
        @Html.ActionLink("Hoofd Menu", "Index", "Home", "", new { @class = "sy-a" })

        | Filter tonen (aan/uit) &nbsp;

        @Html.CheckBoxFor(model => model.FilterData.Filter, new { @class = "sy-switch", @onclick = "valueChanged()" })
        | @Html.ActionLink("Wis alle filters", "Index", "Components", new { filterstr = "N" }, new { @class = "sy-a" }) |
        <div class="sy-aantal">
            @Html.DisplayNameFor(model => model.Aantal) :
            @Html.DisplayFor(model => model.Aantal)
        </div>

    </div>

    <p class="sy-filter">
        @Html.HiddenFor(model => model.FilterData.Subsetstr)
        @Html.HiddenFor(model => model.FilterData.Filterstr, new { @class = "sy-hiddenfilter" })
        @Html.DisplayNameFor(model => model.FilterData.ShowAll) :
        @Html.CheckBoxFor(model => model.FilterData.ShowAll, new { @class = "sy-checky", @onclick = "onlyOne(this,'Comp')" }) |
        @Html.DisplayNameFor(model => model.FilterData.ShowActive) :
        @Html.CheckBoxFor(model => model.FilterData.ShowActive, new { @class = "sy-checky", @onclick = "onlyOne(this,'Comp')" }) |
        @Html.DisplayNameFor(model => model.FilterData.ShowInactive) :
        @Html.CheckBoxFor(model => model.FilterData.ShowInactive, new { @class = "sy-checky", @onclick = "onlyOne(this,'Comp')" }) |
        @Html.DisplayNameFor(model => model.FilterData.ShowEmpty) :
        @Html.CheckBoxFor(model => model.FilterData.ShowEmpty, new { @class = "sy-checky", @onclick = "onlyOne(this,'Comp')" })

    </p>

    <table class="sy-table">
        <tr>

            <th>Actie</th>
            <th>
                @Html.DisplayNameFor(model => model.ComponentLijst[0].ComponentNameTemplate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ComponentLijst[0].Authorized)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ComponentLijst[0].VendorName)
            </th>
        </tr>

        <tr class="sy-filter">
            <td>
                @Html.ActionLink("Pas filter toe", "Index", null, new { @class = "sy-url" })
            </td>
            <td>
                @Html.EditorFor(model => model.FilterData.ComponentFilter,
               new { htmlAttributes = new { @class = "sy-input", @autofocus = "autofocus", @onchange = "adaptUrls()" } })
                @Html.ValidationMessageFor(model => model.FilterData.ComponentFilter, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.FilterData.AuthFilter,
               new { htmlAttributes = new { @class = "sy-input", @autofocus = "autofocus", @onchange = "adaptUrls()" } })
                @Html.ValidationMessageFor(model => model.FilterData.AuthFilter, "", new { @class = "text-danger" })
            </td>
            <td>
                @Html.EditorFor(model => model.FilterData.VendorFilter,
               new { htmlAttributes = new { @class = "sy-input", @autofocus = "autofocus", @onchange = "adaptUrls()" } })
                @Html.ValidationMessageFor(model => model.FilterData.VendorFilter, "", new { @class = "text-danger" })
            </td>
        </tr>

        @if (Model.ComponentLijst != null)
        {
            foreach (var item in Model.ComponentLijst)
            {

                <tr>
                    <td>
                        @Html.HiddenFor(modelItem => item.ComponentID, new { @class = "sy-hiddenid" })
                        @Html.ActionLink("Bewerk", "Edit", new { id = item.ComponentID }, new { @class = "sy-alist" }) |
                        @Html.ActionLink("Bekijk", "Details", new { id = item.ComponentID }, new { @class = "sy-alist" }) |
                        @Html.ActionLink("Verwijder", "Delete", new { id = item.ComponentID }, new { @class = "sy-alist" })
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ComponentNameTemplate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Authorized)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VendorName)
                    </td>



                </tr>

            }
        }

    </table>

    <p>
        *** Einde van de lijst ***
    </p>


</div>
