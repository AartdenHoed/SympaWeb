<div class="controller">
    @model ConfigMan.ViewModels.ComponentVM
    
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h2>
            @Html.DisplayFor(model => model.Message.Title)
        </h2>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ComponentID)
        @Html.HiddenFor(model => model.VendorID)

        <dl class="sy-dl">
            <dt class="sy-dt">
                @Html.LabelFor(model => model.ComponentNameTemplate)
            </dt>
            <dd class="sy-dd">
                @Html.EditorFor(model => model.ComponentNameTemplate, new { htmlAttributes = new { @class = "sy-input", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.ComponentNameTemplate, "", new { @class = "text-danger" })
            </dd>
            <dt class="sy-dt">
                @Html.LabelFor(model => model.Authorized)
            </dt>
            <dd class="sy-dd">
                @Html.EditorFor(model => model.Authorized, new { htmlAttributes = new { @class = "sy-input", @autofocus = "autofocus" } })
                @Html.ValidationMessageFor(model => model.Authorized, "", new { @class = "text-danger" })
            </dd>
            <dt class="sy-dt">
                @Html.LabelFor(model => model.VendorName)
            </dt>
            <dd class="sy-dd">
                @Html.DropDownListFor(model => model.SelectedVendorIDstring, new SelectList(Model.VendorLijst, "VendorIDstring", "VendorName"),
                                                            new { @class = "sy-field" })
                @Html.ValidationMessageFor(model => model.SelectedVendorIDstring, "", new { @class = "text-danger" })
            </dd>



        </dl>
        <div>
            @Html.HiddenFor(model => model.ComponentID, new { @class = "sy-hiddenid" })
            @Html.HiddenFor(model => model.FilterData.ComponentFilter, new { @class = "sy-hiddenfilter"})
            @Html.HiddenFor(model => model.FilterData.VendorFilter, new { @class = "sy-hiddenfilter"})
            @Html.HiddenFor(model => model.FilterData.AuthFilter, new { @class = "sy-hiddenfilter"})
            @Html.HiddenFor(model => model.FilterData.Filterstr, new { @class = "sy-hiddenfilter"})
            @Html.HiddenFor(model => model.FilterData.Subsetstr, new { @class = "sy-hiddenfilter"})
        </div>
        <p>
            @Html.DisplayFor(model => model.Message.Tekst)
        </p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Opslaan" class="sy-button" /> |
                @Html.ActionLink("Terug naar lijst", "Index", "", new { @class = "sy-url" }))
            </div>
        </div>
    </div>
    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
</div>
